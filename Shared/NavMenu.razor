@using InventoryManagementBlazorServer.Services
@inject NavigationManager Navigation
@inject TokenStorageService _tokenStorageService

@if (ShouldShowNavbar)
{
    <header>
        <nav class="navbar navbar-expand-lg navbar-dark bg-primary bg-gradient shadow-lg fixed-top">
            <div class="container">
                <button class="navbar-toggler border-0" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
                        aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>

                <div class="collapse navbar-collapse w-100 align-items-center" id="navbarNav">
                    <ul class="navbar-nav gap-3 align-items-center">
                        <li class="nav-item">
                            <a class="nav-link d-flex align-items-center @(Navigation.Uri.Contains("inventory-out") ? "active" : "")" href="/inventory-out">
                                <i class="bi bi-box-arrow-in-right me-2"></i> Registrar Salida
                            </a>
                        </li>
                        <li class="nav-item" style="margin-top: 25px">
                            <a class="nav-link d-flex align-items-center @(Navigation.Uri.Contains("inventory-list") ? "active" : "")" href="/inventory-list">
                                <i class="bi bi-list-check me-2"></i> Listado de Salidas
                            </a>
                        </li>
                    </ul>

                    <div class="ms-auto">
                        <button class="btn btn-outline-light fw-bold px-4 py-2 rounded-pill d-flex align-items-center" @onclick="Logout">
                            <i class="bi bi-box-arrow-right me-2"></i> Cerrar Sesión
                        </button>
                    </div>
                </div>
            </div>
        </nav>
    </header>

    <div style="margin-top: 140px;"></div>
}

@code {
    private bool ShouldShowNavbar => !string.IsNullOrWhiteSpace(Navigation.Uri) &&
                                      !Navigation.Uri.EndsWith("/", StringComparison.OrdinalIgnoreCase);

    private void Logout()
    {
        _tokenStorageService.DeleteToken();
        Navigation.NavigateTo("/", forceLoad: true);
    }
}